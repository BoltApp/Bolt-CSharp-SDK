//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Boltpay.SDK.Models.Errors
{
    using Boltpay.SDK.Models.Errors;
    using Boltpay.SDK.Utils;
    using Newtonsoft.Json.Linq;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System.Numerics;
    using System.Reflection;
    using System;
    

    public class ResponsePaymentErrorType
    {
        private ResponsePaymentErrorType(string value) { Value = value; }

        public string Value { get; private set; }
        public static ResponsePaymentErrorType Error { get { return new ResponsePaymentErrorType("error"); } }
        
        public static ResponsePaymentErrorType FieldError { get { return new ResponsePaymentErrorType("field-error"); } }
        
        public static ResponsePaymentErrorType CartError { get { return new ResponsePaymentErrorType("cart-error"); } }
        
        public static ResponsePaymentErrorType CreditCardError { get { return new ResponsePaymentErrorType("credit-card-error"); } }
        
        public static ResponsePaymentErrorType Null { get { return new ResponsePaymentErrorType("null"); } }

        public override string ToString() { return Value; }
        public static implicit operator String(ResponsePaymentErrorType v) { return v.Value; }
        public static ResponsePaymentErrorType FromString(string v) {
            switch(v) {
                case "error": return Error;
                case "field-error": return FieldError;
                case "cart-error": return CartError;
                case "credit-card-error": return CreditCardError;
                case "null": return Null;
                default: throw new ArgumentException("Invalid value for ResponsePaymentErrorType");
            }
        }
        public override bool Equals(object? obj)
        {
            if (obj == null || GetType() != obj.GetType())
            {
                return false;
            }
            return Value.Equals(((ResponsePaymentErrorType)obj).Value);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }
    }


    /// <summary>
    /// The payment operation cannot complete
    /// </summary>
    [JsonConverter(typeof(ResponsePaymentError.ResponsePaymentErrorConverter))]
    public class ResponsePaymentError {
        public ResponsePaymentError(ResponsePaymentErrorType type) {
            Type = type;
        }

        [SpeakeasyMetadata("form:explode=true")]
        public Error? Error { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public FieldError? FieldError { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public CartError? CartError { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public CreditCardError? CreditCardError { get; set; }

        public ResponsePaymentErrorType Type { get; set; }


        public static ResponsePaymentError CreateError(Error error) {
            ResponsePaymentErrorType typ = ResponsePaymentErrorType.Error;

            ResponsePaymentError res = new ResponsePaymentError(typ);
            res.Error = error;
            return res;
        }

        public static ResponsePaymentError CreateFieldError(FieldError fieldError) {
            ResponsePaymentErrorType typ = ResponsePaymentErrorType.FieldError;

            ResponsePaymentError res = new ResponsePaymentError(typ);
            res.FieldError = fieldError;
            return res;
        }

        public static ResponsePaymentError CreateCartError(CartError cartError) {
            ResponsePaymentErrorType typ = ResponsePaymentErrorType.CartError;

            ResponsePaymentError res = new ResponsePaymentError(typ);
            res.CartError = cartError;
            return res;
        }

        public static ResponsePaymentError CreateCreditCardError(CreditCardError creditCardError) {
            ResponsePaymentErrorType typ = ResponsePaymentErrorType.CreditCardError;

            ResponsePaymentError res = new ResponsePaymentError(typ);
            res.CreditCardError = creditCardError;
            return res;
        }

        public static ResponsePaymentError CreateNull() {
            ResponsePaymentErrorType typ = ResponsePaymentErrorType.Null;
            return new ResponsePaymentError(typ);
        }

        public class ResponsePaymentErrorConverter : JsonConverter
        {

            public override bool CanConvert(System.Type objectType) => objectType == typeof(ResponsePaymentError);

            public override bool CanRead => true;

            public override object? ReadJson(JsonReader reader, System.Type objectType, object? existingValue, JsonSerializer serializer)
            {
                var json = JRaw.Create(reader).ToString();
                if (json == "null")
                {
                    return null;
                }

                var fallbackCandidates = new List<(System.Type, object, string)>();

                try
                {
                    return new ResponsePaymentError(ResponsePaymentErrorType.Error)
                    {
                        Error = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<Error>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(Error), new ResponsePaymentError(ResponsePaymentErrorType.Error), "Error"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new ResponsePaymentError(ResponsePaymentErrorType.FieldError)
                    {
                        FieldError = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<FieldError>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(FieldError), new ResponsePaymentError(ResponsePaymentErrorType.FieldError), "FieldError"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new ResponsePaymentError(ResponsePaymentErrorType.CartError)
                    {
                        CartError = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<CartError>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(CartError), new ResponsePaymentError(ResponsePaymentErrorType.CartError), "CartError"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new ResponsePaymentError(ResponsePaymentErrorType.CreditCardError)
                    {
                        CreditCardError = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<CreditCardError>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(CreditCardError), new ResponsePaymentError(ResponsePaymentErrorType.CreditCardError), "CreditCardError"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                if (fallbackCandidates.Count > 0)
                {
                    fallbackCandidates.Sort((a, b) => ResponseBodyDeserializer.CompareFallbackCandidates(a.Item1, b.Item1, json));
                    foreach(var (deserializationType, returnObject, propertyName) in fallbackCandidates)
                    {
                        try
                        {
                            return ResponseBodyDeserializer.DeserializeUndiscriminatedUnionFallback(deserializationType, returnObject, propertyName, json);
                        }
                        catch (ResponseBodyDeserializer.DeserializationException)
                        {
                            // try next fallback option
                        }
                        catch (Exception)
                        {
                            throw;
                        }
                    }
                }

                throw new InvalidOperationException("Could not deserialize into any supported types.");
            }

            public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer)
            {
                if (value == null) {
                    writer.WriteRawValue("null");
                    return;
                }
                ResponsePaymentError res = (ResponsePaymentError)value;
                if (ResponsePaymentErrorType.FromString(res.Type).Equals(ResponsePaymentErrorType.Null))
                {
                    writer.WriteRawValue("null");
                    return;
                }
                if (res.Error != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.Error));
                    return;
                }
                if (res.FieldError != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.FieldError));
                    return;
                }
                if (res.CartError != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.CartError));
                    return;
                }
                if (res.CreditCardError != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.CreditCardError));
                    return;
                }

            }

        }

    }
}